name: "Create Jira issue"
description: "Create Jira Issue"
inputs:
  JIRA_BASE_URL:
    description: 'JIRA BASE URL'
    required: true
  JIRA_USER_EMAIL:
    description: 'JIRA USER EMAIL'
    required: true
  JIRA_API_TOKEN:
    description: 'JIRA API TOKEN'
    required: true
  TARGET_JIRA_PROJECT:
    description: 'Enter the JIRA Project key'
    required: true
  JIRA_LABEL:
    description: 'Specify the label you want to put on JIRA side'
    required: false
  ISSUE_TYPE:
    description: 'Specify the issue type: Task/Bug/Story'
    required: true
  TEAM_NAME:
    description: 'Specify the Team (use exact name from the jira) to set this in the issue'
    required: false
  CUSTOM_FIELDS:
    description: 'JSON key-value strings of custom fields to be added to the JIRA issue'
    required: false

runs:
  using: "composite"
  steps:
    - name: Jira Login
      id: login
      uses: atlassian/gajira-login@v2.0.0
      env:
        JIRA_BASE_URL: ${{ inputs.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ inputs.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ inputs.JIRA_API_TOKEN }}
    - name: Map TEAM_NAME input to Jira Team id
      id: map_team_name_to_id
      uses: actions/github-script@v6
      env:
        TEAM_NAME_TO_ID_MAPPING: '{"CORE":"8efa38f2-5771-4c85-9937-81480a9a73a7", "STORAGE":"f872bbfc-2e8c-4d08-ae32-eaec7868a02d", "SQL":"4f4bd152-d7fe-45dc-a85a-1ffd46859718", "INTEGRATION":"67b972af-e215-4a30-9c6e-e2010d97278e", "ALTO":"b9396a1a-7f55-4b08-96ab-bcf5c5320dbe", "DOCUMENTATION":"e1c90cba-1d48-4cd4-8ba8-970fcddc1961", "PRODUCT MANAGEMENT":"dd085095-e1d2-485b-bdf7-b4c991d34208", "QE":"067f44d8-48bf-4376-b505-076c85912994", "MANAGEMENT AND MONITORING":"c0d3f295-0b47-47aa-9bfb-eb5b1e8c4189", "DESIGN":"19ce6cbf-6127-4998-a3f9-f6a196ae8846", "DMT":"948cd0f9-4738-46ca-9c9b-19c1e79283cd", "PRODUCT MARKETING":"6bd56cd7-9380-457a-a9a2-132d8474f2d3", "RELEASE ENGINEERING":"bf6b1c42-7ea8-4c2e-8454-3468c862217f", "SECURITY":"b220c813-a4b4-4a4f-9f8e-4b7a90c6445d", "SRE":"00a4a840-a5ec-4f14-8c2a-38dbe195b6d0", "CLIENT":"c8156678-cea7-42f5-a749-ea804a1af35e", "VIRIDIAN":"4106b2b9-b650-460a-9b3b-82423b9ab7ac"}'
      with:
        result-encoding: string
        script: |
          const teamName = "${{ inputs.TEAM_NAME }}"
          const teamMapping = JSON.parse('${{ env.TEAM_NAME_TO_ID_MAPPING }}')
          let teamId;
          if (teamName) {
          teamId = teamMapping[teamName.toUpperCase()]
          }
          if(!teamId) {
          return ""
          }
          return ',"customfield_10001" : "' + teamId + '"'
    - name: Fetch CUSTOM_FIELDS if defined
      id: fetch_custom_fields_if_defined
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const rawCustomFields = `${{ inputs.CUSTOM_FIELDS }}`.trim();
          if (rawCustomFields) {
            try {
              const inputToParse = rawCustomFields.startsWith('{') ? rawCustomFields : `{${rawCustomFields}}`;
              const parsedCustomFields = JSON.parse(inputToParse);
              console.log(`Parsed CUSTOM_FIELDS: ${JSON.stringify(parsedCustomFields)}`);
              return ',' + Object.entries(parsedCustomFields)
                .map(([key, value]) => `"${key}": "${value}"`)
                .join(', ');
            } catch (error) {
              throw new Error(
                `Invalid CUSTOM_FIELDS format: '${rawCustomFields}'. Must be either a valid JSON object or key-value pairs in JSON format.`
              );
            }
          }
          return '';
    - name: Create Jira issue
      id: create_jira_issue
      uses: atlassian/gajira-create@v2.0.1
      with:
        project: ${{ inputs.TARGET_JIRA_PROJECT }}
        issuetype: ${{ inputs.ISSUE_TYPE }}
        summary: |
           ${{ github.event.issue.title }} [GH#${{ github.event.issue.number }}]
        description: |
          {panel}
          *Created By:* ${{ github.event.issue.user.login }}
          [Github permalink|${{ github.event.issue.html_url }}]
          {panel}
        fields: '{"labels": ["${{ inputs.JIRA_LABEL }}"] ${{ steps.map_team_name_to_id.outputs.result }} ${{ steps.fetch_custom_fields_if_defined.outputs.result }} }'
    - name: Update title of GitHub issue
      uses: actions/github-script@v4.0.2
      env:
        title: ${{ github.event.issue.title }}
      with:
        script: |
          const newTitle = process.env.title + ` [${{ steps.create_jira_issue.outputs.issue }}]`
          github.issues.update({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: newTitle
          })
    - name: Add comment to GitHub issue
      uses: actions/github-script@v4.0.2
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Internal Jira issue: [${{ steps.create_jira_issue.outputs.issue }}](${{ inputs.JIRA_BASE_URL }}/browse/${{ steps.create_jira_issue.outputs.issue }})'
          })
